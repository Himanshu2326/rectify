{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\myapp\\\\src\\\\App.jsx\";\nimport React from 'react';\nimport Netflix from './Netflix';\nimport Other from './Other';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet Name = \"N\";\nconst Check = () => {\n  if (Name === \"N\") {\n    return /*#__PURE__*/_jsxDEV(Netflix, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Other, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  }\n};\n_c = Check;\nconst App = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: /*#__PURE__*/_jsxDEV(Check, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this)\n}, void 0, false);\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Check\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","Netflix","Other","jsxDEV","_jsxDEV","Fragment","_Fragment","Name","Check","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","children","_c2","$RefreshReg$"],"sources":["D:/React/myapp/src/App.jsx"],"sourcesContent":["\r\nimport React from 'react'\r\nimport Netflix from './Netflix';\r\nimport Other from './Other';\r\n\r\n\r\nlet Name = \"N\";\r\n\r\nconst Check =()=>{\r\n    if(Name===\"N\"){\r\n        return <Netflix/>\r\n    }\r\n    else{\r\n        return <Other/>\r\n    }\r\n}\r\n\r\n\r\nconst App = () => (\r\n    <>\r\n    {/* {\r\n        Sdata.map((val) => {\r\n           \r\n        })} */}\r\n        <Check/>\r\n        \r\n    </>\r\n\r\n)\r\n\r\nexport default App;"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG5B,IAAIC,IAAI,GAAG,GAAG;AAEd,MAAMC,KAAK,GAAEA,CAAA,KAAI;EACb,IAAGD,IAAI,KAAG,GAAG,EAAC;IACV,oBAAOH,OAAA,CAACH,OAAO;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EACrB,CAAC,MACG;IACA,oBAAOR,OAAA,CAACF,KAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EACnB;AACJ,CAAC;AAAAC,EAAA,GAPKL,KAAK;AAUX,MAAMM,GAAG,GAAGA,CAAA,kBACRV,OAAA,CAAAE,SAAA;EAAAS,QAAA,eAKIX,OAAA,CAACI,KAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC;AAAC,gBAEV,CAEL;AAAAI,GAAA,GAVKF,GAAG;AAYT,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}