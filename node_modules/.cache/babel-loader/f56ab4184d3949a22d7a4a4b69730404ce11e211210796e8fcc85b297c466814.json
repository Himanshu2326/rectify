{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\myapp\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  let [num, setNum] = useState(0);\n  let [num2, setNum2] = useState(0);\n\n  //* useEffect:\n\n  // useEffect(() => {\n  //     alert('You Clicked');\n  // })\n\n  //* When we Want only on time reload call so pass Empty Array:----\n\n  useEffect(() => {\n    alert('You Clicked');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setNum(num + 1),\n      children: [\"Click \", num]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setNum2(num2 + 1),\n      children: [\"Click \", num]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"qErbNcit3n2bMs8CrKxBTKpA3e0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","num","setNum","num2","setNum2","alert","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React/myapp/src/App.jsx"],"sourcesContent":["\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst App = () => {\r\n    let [num, setNum] = useState(0);\r\n    let [num2, setNum2] = useState(0);\r\n\r\n    //* useEffect:\r\n\r\n    // useEffect(() => {\r\n    //     alert('You Clicked');\r\n    // })\r\n\r\n    //* When we Want only on time reload call so pass Empty Array:----\r\n\r\n    useEffect(() => {\r\n        alert('You Clicked');\r\n    }, [])\r\n    return (\r\n        <>\r\n            <button\r\n                onClick={() => setNum(num + 1)}>Click {num}\r\n            </button>\r\n            <button\r\n                onClick={() => setNum2(num2 + 1)}>Click {num}\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,IAAI,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAC/B,IAAI,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;;EAEjC;;EAEA;EACA;EACA;;EAEA;;EAEAD,SAAS,CAAC,MAAM;IACZY,KAAK,CAAC,aAAa,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EACN,oBACIT,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACIV,OAAA;MACIW,OAAO,EAAEA,CAAA,KAAML,MAAM,CAACD,GAAG,GAAG,CAAC,CAAE;MAAAK,QAAA,GAAC,QAAM,EAACL,GAAG;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACTf,OAAA;MACIW,OAAO,EAAEA,CAAA,KAAMH,OAAO,CAACD,IAAI,GAAG,CAAC,CAAE;MAAAG,QAAA,GAAC,QAAM,EAACL,GAAG;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA,eACX,CAAC;AAEX,CAAC;AAAAX,EAAA,CAzBKD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AA2BT,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}