{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\myapp\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// const App = () => {\n\n//     let [MyName, newName] = useState({\n//         fname: '',\n//         pass: '',\n//         email: '',\n//         num: '',\n//     });\n\n//     const InputEvent = (e) => {\n//         let Val = e.target.value;\n//         console.log(Val);\n\n//         // const value = e.target.value;\n//         // const Name = e.target.name;\n\n//         const { value, Name } = e.target;\n\n//         newName((preValue) => {\n//             if (Name === \"fname\") {\n//                 return {\n//                     fname: value,\n//                     pass: preValue.pass,\n//                     email: preValue.email,\n//                     num: preValue.num,\n//                 }\n//             }\n//             else if (Name === \"pass\") {\n//                 return {\n//                     fname: preValue.fname,\n//                     pass: value,\n//                     email: preValue.email,\n//                     num: preValue.num,\n//                 }\n//             }\n//             else if (Name === \"Email\") {\n//                 return {\n//                     fname: preValue.fname,\n//                     pass: preValue.pass,\n//                     email: value,\n//                     num: preValue.num,\n//                 }\n//             }\n//             else {\n//                 return {\n//                     fname: preValue.fname,\n//                     pass: preValue.pass,\n//                     email: preValue.email,\n//                     num: value,\n//                 }\n//             }\n//         })\n//     }\n//     const ShowName = (e) => {\n//         e.preventDefault();\n//         alert('Submited')\n//     }\n\n//     return (\n//         <>\n//             <form onSubmit={ShowName}>\n//                 <div>\n//                     <h1>Hello {MyName.fname} {MyName.pass}</h1>\n//                     <p>{MyName.email}</p>\n//                     <p>{MyName.num}</p>\n//                     <input placeholder=\"Enter Your Name\" type=\"text\" onChange={InputEvent} value={MyName.fname} name=\"fname\" />\n//                     <input placeholder=\"Enter Your Password\" type=\"text\" onChange={InputEvent} value={MyName.Pass} name=\"pass\" />\n//                     <input placeholder=\"Enter Your Email\" type=\"email\" onChange={InputEvent} value={MyName.Email} name=\"email\" />\n//                     <input placeholder=\"Enter Your Phone\" type=\"number\" onChange={InputEvent} value={MyName.Num} name=\"num\" />\n\n//                     <button type=\"submit\">Submit</button>\n//                 </div>\n//             </form>\n\n//         </>\n//     )\n// }\n\n// export default App;\n\n// Making Simple To Input And Show the value in React :------------\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  let [MyName, newName] = useState({\n    fname: '',\n    pass: ''\n  });\n  const InputEvent = e => {\n    let Val = e.target.value;\n    console.log(Val);\n    const value = e.target.value;\n    const Name = e.target.name;\n    newName(preValue => {\n      if (Name === \"fname\") {\n        return {\n          fname: value,\n          pass: preValue.pass\n        };\n      } else {\n        return {\n          fname: preValue.fname,\n          pass: value\n        };\n      }\n    });\n  };\n  const ShowName = e => {\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: ShowName,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Hello \", MyName.fname, \" \", MyName.pass]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter Your Name\",\n          type: \"text\",\n          onChange: InputEvent,\n          value: MyName.fName,\n          name: \"fname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter Your Password\",\n          type: \"text\",\n          onChange: InputEvent,\n          value: MyName.Pass,\n          name: \"pass\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"YzjvFSbLbin4TnPgKPPJaOPRyVM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","MyName","newName","fname","pass","InputEvent","e","Val","target","value","console","log","Name","name","preValue","ShowName","preventDefault","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","onChange","fName","Pass","_c","$RefreshReg$"],"sources":["D:/React/myapp/src/App.jsx"],"sourcesContent":["\r\n// import React, { useState } from \"react\";\r\n\r\n// const App = () => {\r\n\r\n//     let [MyName, newName] = useState({\r\n//         fname: '',\r\n//         pass: '',\r\n//         email: '',\r\n//         num: '',\r\n//     });\r\n\r\n//     const InputEvent = (e) => {\r\n//         let Val = e.target.value;\r\n//         console.log(Val);\r\n\r\n//         // const value = e.target.value;\r\n//         // const Name = e.target.name;\r\n\r\n//         const { value, Name } = e.target;\r\n\r\n//         newName((preValue) => {\r\n//             if (Name === \"fname\") {\r\n//                 return {\r\n//                     fname: value,\r\n//                     pass: preValue.pass,\r\n//                     email: preValue.email,\r\n//                     num: preValue.num,\r\n//                 }\r\n//             }\r\n//             else if (Name === \"pass\") {\r\n//                 return {\r\n//                     fname: preValue.fname,\r\n//                     pass: value,\r\n//                     email: preValue.email,\r\n//                     num: preValue.num,\r\n//                 }\r\n//             }\r\n//             else if (Name === \"Email\") {\r\n//                 return {\r\n//                     fname: preValue.fname,\r\n//                     pass: preValue.pass,\r\n//                     email: value,\r\n//                     num: preValue.num,\r\n//                 }\r\n//             }\r\n//             else {\r\n//                 return {\r\n//                     fname: preValue.fname,\r\n//                     pass: preValue.pass,\r\n//                     email: preValue.email,\r\n//                     num: value,\r\n//                 }\r\n//             }\r\n//         })\r\n//     }\r\n//     const ShowName = (e) => {\r\n//         e.preventDefault();\r\n//         alert('Submited')\r\n//     }\r\n\r\n//     return (\r\n//         <>\r\n//             <form onSubmit={ShowName}>\r\n//                 <div>\r\n//                     <h1>Hello {MyName.fname} {MyName.pass}</h1>\r\n//                     <p>{MyName.email}</p>\r\n//                     <p>{MyName.num}</p>\r\n//                     <input placeholder=\"Enter Your Name\" type=\"text\" onChange={InputEvent} value={MyName.fname} name=\"fname\" />\r\n//                     <input placeholder=\"Enter Your Password\" type=\"text\" onChange={InputEvent} value={MyName.Pass} name=\"pass\" />\r\n//                     <input placeholder=\"Enter Your Email\" type=\"email\" onChange={InputEvent} value={MyName.Email} name=\"email\" />\r\n//                     <input placeholder=\"Enter Your Phone\" type=\"number\" onChange={InputEvent} value={MyName.Num} name=\"num\" />\r\n\r\n//                     <button type=\"submit\">Submit</button>\r\n//                 </div>\r\n//             </form>\r\n\r\n\r\n//         </>\r\n//     )\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n// Making Simple To Input And Show the value in React :------------\r\n\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nconst App = () => {\r\n\r\n    let [MyName, newName] = useState({\r\n        fname: '',\r\n        pass: '',\r\n    });\r\n\r\n    const InputEvent = (e) => {\r\n        let Val = e.target.value;\r\n        console.log(Val);\r\n    \r\n    const value = e.target.value;\r\n    const Name = e.target.name;\r\n\r\n    newName((preValue) => {\r\n        if (Name === \"fname\") {\r\n            return {\r\n                fname: value,\r\n                pass: preValue.pass,\r\n            }\r\n        }\r\n        else {\r\n            return {\r\n                fname: preValue.fname,\r\n                pass: value,\r\n            }\r\n        }\r\n    })\r\n    }\r\n    const ShowName = (e) => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={ShowName}>\r\n                <div>\r\n                    <h1>Hello {MyName.fname} {MyName.pass}</h1>\r\n                    <input placeholder=\"Enter Your Name\" type=\"text\" onChange={InputEvent} value={MyName.fName} name=\"fname\" />\r\n                    <input placeholder=\"Enter Your Password\" type=\"text\" onChange={InputEvent} value={MyName.Pass} name=\"pass\" />\r\n                    <button type=\"submit\">Submit</button>\r\n                </div>\r\n            </form>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}